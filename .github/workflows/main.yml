name: CI/CD Pipeline for Cyber Awareness Bot

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET 6 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Restore dependencies
      run: dotnet restore CyberAwareness.csproj

    - name: Build WPF App
      run: dotnet build CyberAwareness.csproj --configuration Release --no-restore

    - name: Publish WPF App (self-contained single EXE)
      run: |
        dotnet publish CyberAwareness.csproj -c Release -r win-x64 --self-contained true `
          -p:PublishSingleFile=true `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          -p:WindowsAppSDKSelfContained=true `
          -o ./publish
      shell: pwsh

    - name: Upload Build Output
      uses: actions/upload-artifact@v4
      with:
        name: CyberAwareness-Build
        path: ./publish
        retention-days: 30

  package:
    runs-on: windows-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Zip Published App
      run: Compress-Archive -Path ./publish/* -DestinationPath ./CyberAwareness-Windows-x64.zip
      shell: pwsh

    - name: Upload Zipped Release
      uses: actions/upload-artifact@v4
      with:
        name: CyberAwareness-Release
        path: ./CyberAwareness-Windows-x64.zip
        retention-days: 90

  release:
    runs-on: windows-latest
    needs: package
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Release Artifact
      uses: actions/download-artifact@v4
      with:
        name: CyberAwareness-Release

    - name: Publish GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: CyberAwareness-Windows-x64.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
