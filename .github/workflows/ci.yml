name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x' # Change this to match your .NET version
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build application
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests (if any)
      run: dotnet test --configuration Release --no-build --verbosity normal
      continue-on-error: true # Continue even if no tests are found
      
    - name: Publish application
      run: dotnet publish --configuration Release --output ./publish --no-build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CyberChatBot-Build
        path: ./publish/
        retention-days: 30

  code-quality:
    runs-on: windows-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Run code analysis
      run: dotnet build --configuration Release --verbosity normal
      
    # Optional: Add security scanning
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'
      continue-on-error: true

  package:
    runs-on: windows-latest
    needs: [build, code-quality]
    if: github.ref == 'refs/heads/main' # Only run on main branch
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build and publish for Windows
      run: |
        dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true --output ./dist/win-x64/
        
    - name: Create release package
      run: |
        Compress-Archive -Path ./dist/win-x64/* -DestinationPath ./CyberChatBot-Windows-x64.zip
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CyberChatBot-Release
        path: ./CyberChatBot-Windows-x64.zip
        retention-days: 90

  # Optional: Auto-release on version tags
  release:
    runs-on: windows-latest
    needs: [build, code-quality, package]
    if: startsWith(github.ref, 'refs/tags/v') # Only run on version tags
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: CyberChatBot-Release
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: CyberChatBot-Windows-x64.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
